buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

jarJar.enable()


group = 'yerova'
version = '1.20.1-0.7.2'

java {
    archivesBaseName = 'botanicpledge'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

compileJava {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

minecraft {
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {


        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'botanicpledge'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args "-mixin.config=botanicpledge.mixin.json"

            mods {
                botanicpledge {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'botanicpledge'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args "-mixin.config=botanicpledge.mixin.json"


            mods {
                botanicpledge {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'botanicpledge'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args "-mixin.config=botanicpledge.mixin.json"


            mods {
                botanicpledge {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"


            args '--mod', 'botanicpledge', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'),

                    mods {
                        botanicpledge {
                            source sourceSets.main
                        }
                    }
        }

    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    //botania and patchouli
    maven { url "https://maven.blamejared.com" }

    //curios
    maven { url = "https://maven.theillusivec4.top/" }

    //just enough Items
    maven {
        // location of the maven that hosts JEI files before January 2023
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }

    maven { // Registrate
        url "https://maven.tterrag.com/"
    }

    maven {url "https://cursemaven.com"}

    maven { url "https://maven.shedaniel.me/" }

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'

    // Registrate
    //jarJar(group: 'com.tterrag.registrate', name: 'Registrate', version: "[MC1.20,MC1.21)")
    compileOnly fg.deobf("com.tterrag.registrate:Registrate:MC1.20-1.3.3")

    //botania
    implementation fg.deobf("vazkii.botania:Botania:1.20.1-444-FORGE")

    //curios
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:5.9.1+1.20.1")

    //patchouli
    implementation fg.deobf("vazkii.patchouli:Patchouli:1.20.1-84-FORGE")

    //just enough items

    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-common-api:15.2.0.27"))
    compileOnly(fg.deobf("mezz.jei:jei-1.20.1-forge-api:15.2.0.27"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-1.20.1-forge:15.2.0.27"))

    //expanded combat
    implementation fg.deobf("curse.maven:expanded-combat-413079:5325188")

    //cloth config
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:11.1.118")



    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, "botanicpledge.mixin-refmap.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "botanicpledge",
                "Specification-Vendor"    : "Yerova",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Yerova",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "botanicpledge.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

reobf {
    jarJar { }
}

tasks.jarJar.finalizedBy('reobfJarJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
