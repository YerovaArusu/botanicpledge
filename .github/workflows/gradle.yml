name: Java CI with Gradle

on:
  push:
    branches: [ "1.20.1" ]
  pull_request:
    branches: [ "1.20.1" ]

jobs:
  remove-println:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Remove System.out.print statements
      run: |
        echo "Removing System.out.print and System.out.println statements..."
        find src/ -type f -name "*.java" -exec sed -i '/System\.out\.print/d' {} +
        echo "Finished removing System.out.print and System.out.println statements."

    - name: Commit and Push changes
      run: |
        git config --global user.name "${{ secrets.COMMIT_USER_NAME }}"
        git config --global user.email "${{ secrets.COMMIT_USER_EMAIL }}"
        if [ -n "$(git status --porcelain)" ]; then
          git add .
          git commit -m "Remove System.out.print statements - $(date)"
          git push
        else
          echo "No changes to commit."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-json:
    runs-on: ubuntu-latest
    needs: remove-println

    steps:
    - uses: actions/checkout@v4

    - name: Validate JSON files
      run: |
        echo "Validating JSON files..."
        for file in $(find src/ -name "*.json"); do
          jq . "$file" > /dev/null 2>&1 || { echo "Invalid JSON in $file"; exit 1; }
        done
        echo "JSON validation completed."

  build:
    runs-on: ubuntu-latest
    needs: check-json

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permissions for Gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Run Unit Tests
      run: ./gradlew test --info

  dependency-submission:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
